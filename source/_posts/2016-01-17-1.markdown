---
layout: post
title: "Go Tour习题实作-二叉数遍历"
date: 2016-01-17 18:13:22 +0800
comments: true
categories: gotour
---
	package main
	
	import(
		"golang.org/x/tour/tree"
		"fmt"
	)
	// Walk 步进 tree t 将所有的值从 tree 发送到 channel ch。
	func Walk(t *tree.Tree, ch chan int){
		switch t.Left{
			case nil: 
			default: 
				Walk(t.Left,ch)
		}
		
		ch<-t.Value
		
		switch t.Right{
			case nil: 
			default: 
				Walk(t.Right,ch)
		}
		
	}
	
	// Same 检测树 t1 和 t2 是否含有相同的值。
	func Same(t1, t2 *tree.Tree) bool {
		ch1 := make(chan int,10)
		ch2 := make(chan int,10)
		go Walk(t1,ch1)
		go Walk(t2,ch2)
		for i:=0;i<10;i++{
			if <-ch1!=<-ch2 {
				return false
			}
		}
		return true
	}
	
	func main() {
	 	fmt.Println("first is ",Same(tree.New(1), tree.New(1)))
		fmt.Println("second is ",Same(tree.New(1), tree.New(2)))
	}
> 主要是遍历的实现，这里的写法比较麻烦一点