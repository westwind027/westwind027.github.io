<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Lua | Westwind027的个人学习博客]]></title>
  <link href="http://westwind027.ml/blog/categories/lua/atom.xml" rel="self"/>
  <link href="http://westwind027.ml/"/>
  <updated>2016-01-24T15:26:02+08:00</updated>
  <id>http://westwind027.ml/</id>
  <author>
    <name><![CDATA[westwind027]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OpenResty学习-Lua部分]]></title>
    <link href="http://westwind027.ml/blog/2016/01/24/12/"/>
    <updated>2016-01-24T10:14:01+08:00</updated>
    <id>http://westwind027.ml/blog/2016/01/24/12</id>
    <content type="html"><![CDATA[<ol>
<li><p>数据类型：数值型，字符串型，函数型，表型，用户自定义型（OpenResty编程可能暂时没用到）</p></li>
<li><p>表：统一了数组、散列表。 通过元表实现了面向对象的功能。</p></li>
<li><p>函数：第一类对象。（可以赋值给表量、作为参数传递、以及作为返回值接收）</p></li>
<li><p>全动态函数调用：
 1）调用的函数未知
 2）函数的参数类型和数目也未知</p></li>
</ol>


<blockquote></blockquote>

<pre><code>local function doAction(method, ...)
   local args = {...} or {}
   method(unpack(args, 1, table.maxn(args)))
end
</code></pre>

<ol>
<li>元表：表现行为类似于C++语言中的操作符重载</li>
</ol>


<blockquote></blockquote>

<pre><code>setmetatable(table,metatable):此方法用于为一个表设置元表。
getmetatable(table)：此方法用于获取表的元表对象

——index     在表中查找键不存在时转而在元表中查找该键的功能
__call      使得表能调用
__tostring  实现自定义的字符串装换
__metatable 保护元表
</code></pre>

<ol>
<li>面向对象：数据放表，方法放元表。使用语法糖调用方法</li>
</ol>


<blockquote></blockquote>

<pre><code>obj:x()等价于obj.x(obj)
</code></pre>

<ol>
<li><p>继承：扩展数据部分和方法，放在表里</p></li>
<li><p>成员私有性：通过工厂方法对外提供的闭包来暴露对外接口</p></li>
</ol>


<blockquote><p>注意事项：</p></blockquote>

<ul>
<li><p><code>不要在 lua 的 table 中使用 nil 值，如果一个元素要删除，直接 remove，不要用 nil 去代替</code></p></li>
<li><p><code>不要使用#操作符来计算包含nil的数组长度</code></p></li>
<li><p><code>抵制使用module()函数来定义Lua模块，使用定义对象的方式来组织模块</code></p></li>
</ul>


<blockquote><p>建议：</p></blockquote>

<ul>
<li><p><code>时间：使用ngx_lua模块提供的带缓存的时间接口，如NGX.TODAY, NGX.TIME, NGX.UTCTIME, NGX.LOCALTIME, NGX.NOW, NGX.HTTP_TIME， 以及 NGX.COOKIE_TIME</code></p></li>
<li><p><code>正则：使用ngx.re中的正则表达式，可以通过参数缓存编译过后的Pattern,且实现的是标准的 POSIX 规范</code></p></li>
<li><p><code>函数：建议将函数的定义都放置在自己的Lua module中，再在content_by_lua_file指向的.lua文件中调用它</code></p></li>
<li><p><code>表的非空判断：</code></p></li>
</ul>


<blockquote></blockquote>

<pre><code>function isTableEmpty(t)
    if t == nil or _G.next(t) == nil then
        return true
    else
        return false
    end
end
</code></pre>
]]></content>
  </entry>
  
</feed>
